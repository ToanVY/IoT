{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\IoT\\\\IoT-WebApp\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/Dashboard.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { getSensorData, controlDeviceAPI } from '../api';\nimport SensorChart from '../components/SensorChart';\nimport SensorCard from '../components/SensorCard';\nimport DeviceCard from '../components/DeviceCard';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [latestData, setLatestData] = useState({\n    temperature: '--',\n    humidity: '--',\n    light: '--'\n  });\n  const [chartData, setChartData] = useState([]);\n  const [deviceStatus, setDeviceStatus] = useState({\n    light: 'off',\n    fan: 'off',\n    ac: 'off'\n  });\n  const socket = io('http://localhost:5000');\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const data = await getSensorData(30);\n        setChartData(data.reverse());\n        if (data.length > 0) {\n          setLatestData(data[data.length - 1]);\n        }\n      } catch (error) {\n        console.error(\"L·ªói t·∫£i d·ªØ li·ªáu ban ƒë·∫ßu:\", error);\n      }\n    };\n    fetchInitialData();\n    socket.on('sensorDataUpdate', data => {\n      setLatestData(data);\n      setChartData(prev => [...prev.slice(-29), data]);\n    });\n\n    // üîÑ Nghe tr·∫°ng th√°i thi·∫øt b·ªã t·ª´ backend\n    socket.on(\"deviceStates\", states => {\n      console.log(\"üîÑ Nh·∫≠n tr·∫°ng th√°i thi·∫øt b·ªã:\", states);\n      setDeviceStatus(states);\n    });\n    return () => {\n      socket.off('sensorDataUpdate');\n      socket.off('deviceStates');\n      socket.disconnect();\n    };\n  }, []);\n  const handleDeviceControl = async (device, status) => {\n    const newStatus = status;\n    const oldStatus = status === 'on' ? 'off' : 'on';\n    setDeviceStatus(prev => ({\n      ...prev,\n      [device]: newStatus\n    }));\n    try {\n      await controlDeviceAPI(device, newStatus);\n      console.log(`L·ªánh ${newStatus} cho ${device} ƒë√£ g·ª≠i th√†nh c√¥ng.`);\n    } catch (error) {\n      console.error(`G·ª≠i l·ªánh th·∫•t b·∫°i cho ${device}:`, error);\n      setDeviceStatus(prev => ({\n        ...prev,\n        [device]: oldStatus\n      }));\n      alert(`L·ªói: Kh√¥ng th·ªÉ g·ª≠i l·ªánh ƒëi·ªÅu khi·ªÉn ${device}.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-summary-cards center\",\n      children: [/*#__PURE__*/_jsxDEV(SensorCard, {\n        title: \"Nhi\\u1EC7t \\u0111\\u1ED9\",\n        value: latestData.temperature,\n        unit: \"\\xB0C\",\n        icon: \"\\uD83C\\uDF21\\uFE0F\",\n        theme: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SensorCard, {\n        title: \"\\u0110\\u1ED9 \\u1EA9m\",\n        value: latestData.humidity,\n        unit: \"%\",\n        icon: \"\\uD83D\\uDCA7\",\n        theme: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SensorCard, {\n        title: \"\\xC1nh s\\xE1ng\",\n        value: latestData.light,\n        unit: \"Lux\",\n        icon: \"\\uD83D\\uDCA1\",\n        theme: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-area card\",\n      children: /*#__PURE__*/_jsxDEV(SensorChart, {\n        sensorData: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"device-control-area\",\n      children: [/*#__PURE__*/_jsxDEV(DeviceCard, {\n        device: \"light\",\n        label: \"\\u0110\\xE8n Chi\\u1EBFu S\\xE1ng\",\n        status: deviceStatus.light,\n        onToggle: handleDeviceControl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeviceCard, {\n        device: \"fan\",\n        label: \"Qu\\u1EA1t Th\\xF4ng Gi\\xF3\",\n        status: deviceStatus.fan,\n        onToggle: handleDeviceControl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeviceCard, {\n        device: \"ac\",\n        label: \"\\u0110i\\u1EC1u H\\xF2a\",\n        status: deviceStatus.ac,\n        onToggle: handleDeviceControl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"kqhaHaZwusA09533Bx/b1qTTfz0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","io","getSensorData","controlDeviceAPI","SensorChart","SensorCard","DeviceCard","jsxDEV","_jsxDEV","Dashboard","_s","latestData","setLatestData","temperature","humidity","light","chartData","setChartData","deviceStatus","setDeviceStatus","fan","ac","socket","fetchInitialData","data","reverse","length","error","console","on","prev","slice","states","log","off","disconnect","handleDeviceControl","device","status","newStatus","oldStatus","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","value","unit","icon","theme","sensorData","label","onToggle","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/IoT/IoT-WebApp/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["// frontend/src/pages/Dashboard.jsx\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { getSensorData, controlDeviceAPI } from '../api'; \r\nimport SensorChart from '../components/SensorChart';\r\nimport SensorCard from '../components/SensorCard';\r\nimport DeviceCard from '../components/DeviceCard';\r\nimport './Dashboard.css'; \r\n\r\nconst Dashboard = () => {\r\n    const [latestData, setLatestData] = useState({ \r\n        temperature: '--', \r\n        humidity: '--', \r\n        light: '--' \r\n    });\r\n    const [chartData, setChartData] = useState([]); \r\n    \r\n    const [deviceStatus, setDeviceStatus] = useState({\r\n        light: 'off',\r\n        fan: 'off',\r\n        ac: 'off'\r\n    });\r\n\r\n    const socket = io('http://localhost:5000'); \r\n\r\n    useEffect(() => {\r\n        const fetchInitialData = async () => {\r\n            try {\r\n                const data = await getSensorData(30); \r\n                setChartData(data.reverse()); \r\n                if (data.length > 0) {\r\n                    setLatestData(data[data.length - 1]);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"L·ªói t·∫£i d·ªØ li·ªáu ban ƒë·∫ßu:\", error);\r\n            }\r\n        };\r\n\r\n        fetchInitialData();\r\n\r\n        socket.on('sensorDataUpdate', (data) => {\r\n            setLatestData(data);\r\n            setChartData(prev => [...prev.slice(-29), data]);\r\n        });\r\n\r\n        // üîÑ Nghe tr·∫°ng th√°i thi·∫øt b·ªã t·ª´ backend\r\n        socket.on(\"deviceStates\", (states) => {\r\n            console.log(\"üîÑ Nh·∫≠n tr·∫°ng th√°i thi·∫øt b·ªã:\", states);\r\n            setDeviceStatus(states);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('sensorDataUpdate');\r\n            socket.off('deviceStates');\r\n            socket.disconnect();\r\n        };\r\n    }, []); \r\n\r\n    const handleDeviceControl = async (device, status) => {\r\n        const newStatus = status; \r\n        const oldStatus = status === 'on' ? 'off' : 'on';\r\n        \r\n        setDeviceStatus(prev => ({ ...prev, [device]: newStatus }));\r\n\r\n        try {\r\n            await controlDeviceAPI(device, newStatus);\r\n            console.log(`L·ªánh ${newStatus} cho ${device} ƒë√£ g·ª≠i th√†nh c√¥ng.`);\r\n        } catch (error) {\r\n            console.error(`G·ª≠i l·ªánh th·∫•t b·∫°i cho ${device}:`, error);\r\n            setDeviceStatus(prev => ({ ...prev, [device]: oldStatus }));\r\n            alert(`L·ªói: Kh√¥ng th·ªÉ g·ª≠i l·ªánh ƒëi·ªÅu khi·ªÉn ${device}.`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-page\">\r\n            <h2>Dashboard Home</h2>\r\n            \r\n            <div className=\"sensor-summary-cards center\">\r\n                <SensorCard title=\"Nhi·ªát ƒë·ªô\" value={latestData.temperature} unit=\"¬∞C\" icon=\"üå°Ô∏è\" theme=\"red\" />\r\n                <SensorCard title=\"ƒê·ªô ·∫©m\" value={latestData.humidity} unit=\"%\" icon=\"üíß\" theme=\"blue\" />\r\n                <SensorCard title=\"√Ånh s√°ng\" value={latestData.light} unit=\"Lux\" icon=\"üí°\" theme=\"yellow\" />\r\n            </div>\r\n            \r\n            <div className=\"chart-area card\">\r\n                <SensorChart sensorData={chartData} /> \r\n            </div>\r\n\r\n            <div className=\"device-control-area\">\r\n                <DeviceCard device=\"light\" label=\"ƒê√®n Chi·∫øu S√°ng\" status={deviceStatus.light} onToggle={handleDeviceControl} />\r\n                <DeviceCard device=\"fan\" label=\"Qu·∫°t Th√¥ng Gi√≥\" status={deviceStatus.fan} onToggle={handleDeviceControl} />\r\n                <DeviceCard device=\"ac\" label=\"ƒêi·ªÅu H√≤a\" status={deviceStatus.ac} onToggle={handleDeviceControl} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
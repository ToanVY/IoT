{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\IoT\\\\IoT-WebApp\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/Dashboard.jsx (Phần đã sửa)\n\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\n// Sửa import để lấy hàm điều khiển mới\nimport { getSensorData, controlDeviceAPI } from '../api';\nimport SensorChart from '../components/SensorChart';\nimport SensorCard from '../components/SensorCard';\nimport DeviceCard from '../components/DeviceCard';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // ... các state khác (latestData, chartData)\n\n  const [latestData, setLatestData] = useState({\n    temperature: '--',\n    humidity: '--',\n    light: '--'\n  });\n  const [chartData, setChartData] = useState([]);\n  const [deviceStatus, setDeviceStatus] = useState({\n    light: 'off',\n    fan: 'off',\n    ac: 'off'\n  });\n\n  // Khởi tạo Socket.IO (Chỉ dùng để nhận dữ liệu cảm biến)\n  const socket = io('http://localhost:5000');\n  useEffect(() => {\n    // ... (logic fetchInitialData và socket.on('sensorDataUpdate') giữ nguyên)\n    const fetchInitialData = async () => {\n      try {\n        const data = await getSensorData(30);\n        setChartData(data.reverse());\n        if (data.length > 0) {\n          setLatestData(data[data.length - 1]);\n        }\n      } catch (error) {\n        console.error(\"Lỗi tải dữ liệu ban đầu:\", error);\n      }\n    };\n    fetchInitialData();\n    socket.on('sensorDataUpdate', data => {\n      setLatestData(data);\n      setChartData(prevChartData => {\n        const newData = [...prevChartData, data];\n        return newData.slice(-30);\n      });\n    });\n    return () => {\n      socket.off('sensorDataUpdate');\n      socket.disconnect();\n    };\n  }, []);\n\n  // HÀM MỚI: Xử lý điều khiển thiết bị bằng API REST\n  const handleDeviceControl = async (device, status) => {\n    const newStatus = status; // 'on' hoặc 'off'\n    const oldStatus = status === 'on' ? 'off' : 'on';\n\n    // 1. Cập nhật giao diện ngay lập tức (UI Optimistic Update)\n    setDeviceStatus(prev => ({\n      ...prev,\n      [device]: newStatus\n    }));\n    try {\n      // 2. Gửi lệnh tới Backend qua API REST\n      await controlDeviceAPI(device, newStatus);\n      console.log(`Lệnh ${newStatus} cho ${device} đã gửi thành công qua REST.`);\n    } catch (error) {\n      console.error(`Gửi lệnh điều khiển thất bại cho ${device}:`, error);\n      // 3. Nếu lỗi, hoàn tác lại trạng thái (Rollback)\n      setDeviceStatus(prev => ({\n        ...prev,\n        [device]: oldStatus\n      }));\n      alert(`Lỗi: Không thể gửi lệnh điều khiển ${device}. Vui lòng kiểm tra Server.`);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // ... (Phần return JSX giữ nguyên)\n    _jsxDEV(\"div\", {\n      className: \"dashboard-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dashboard Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-summary-cards\",\n        children: [/*#__PURE__*/_jsxDEV(SensorCard, {\n          title: \"Nhi\\u1EC7t \\u0111\\u1ED9\",\n          value: latestData.temperature,\n          unit: \"\\xB0C\",\n          icon: \"\\uD83C\\uDF21\\uFE0F\",\n          theme: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SensorCard, {\n          title: \"\\u0110\\u1ED9 \\u1EA9m\",\n          value: latestData.humidity,\n          unit: \"%\",\n          icon: \"\\uD83D\\uDCA7\",\n          theme: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SensorCard, {\n          title: \"\\xC1nh s\\xE1ng\",\n          value: latestData.light,\n          unit: \"Lux\",\n          icon: \"\\uD83D\\uDCA1\",\n          theme: \"yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-area card\",\n        children: /*#__PURE__*/_jsxDEV(SensorChart, {\n          sensorData: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-control-area\",\n        children: [/*#__PURE__*/_jsxDEV(DeviceCard, {\n          device: \"light\",\n          label: \"\\u0110\\xE8n Chi\\u1EBFu S\\xE1ng\",\n          status: deviceStatus.light,\n          onToggle: handleDeviceControl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DeviceCard, {\n          device: \"fan\",\n          label: \"Qu\\u1EA1t Th\\xF4ng Gi\\xF3\",\n          status: deviceStatus.fan,\n          onToggle: handleDeviceControl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DeviceCard, {\n          device: \"ac\",\n          label: \"\\u0110i\\u1EC1u H\\xF2a\",\n          status: deviceStatus.ac,\n          onToggle: handleDeviceControl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Dashboard, \"kqhaHaZwusA09533Bx/b1qTTfz0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","io","getSensorData","controlDeviceAPI","SensorChart","SensorCard","DeviceCard","jsxDEV","_jsxDEV","Dashboard","_s","latestData","setLatestData","temperature","humidity","light","chartData","setChartData","deviceStatus","setDeviceStatus","fan","ac","socket","fetchInitialData","data","reverse","length","error","console","on","prevChartData","newData","slice","off","disconnect","handleDeviceControl","device","status","newStatus","oldStatus","prev","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","value","unit","icon","theme","sensorData","label","onToggle","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/IoT/IoT-WebApp/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["// frontend/src/pages/Dashboard.jsx (Phần đã sửa)\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\n// Sửa import để lấy hàm điều khiển mới\r\nimport { getSensorData, controlDeviceAPI } from '../api'; \r\nimport SensorChart from '../components/SensorChart';\r\nimport SensorCard from '../components/SensorCard';\r\nimport DeviceCard from '../components/DeviceCard';\r\nimport './Dashboard.css'; \r\n\r\nconst Dashboard = () => {\r\n    // ... các state khác (latestData, chartData)\r\n\r\n    const [latestData, setLatestData] = useState({ \r\n        temperature: '--', \r\n        humidity: '--', \r\n        light: '--' \r\n    });\r\n    const [chartData, setChartData] = useState([]); \r\n    \r\n    const [deviceStatus, setDeviceStatus] = useState({\r\n        light: 'off',\r\n        fan: 'off',\r\n        ac: 'off'\r\n    });\r\n\r\n    // Khởi tạo Socket.IO (Chỉ dùng để nhận dữ liệu cảm biến)\r\n    const socket = io('http://localhost:5000'); \r\n\r\n    useEffect(() => {\r\n        // ... (logic fetchInitialData và socket.on('sensorDataUpdate') giữ nguyên)\r\n        const fetchInitialData = async () => {\r\n            try {\r\n                const data = await getSensorData(30); \r\n                setChartData(data.reverse()); \r\n                if (data.length > 0) {\r\n                    setLatestData(data[data.length - 1]);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Lỗi tải dữ liệu ban đầu:\", error);\r\n            }\r\n        };\r\n\r\n        fetchInitialData();\r\n\r\n        socket.on('sensorDataUpdate', (data) => {\r\n            setLatestData(data);\r\n            setChartData(prevChartData => {\r\n                const newData = [...prevChartData, data];\r\n                return newData.slice(-30); \r\n            });\r\n        });\r\n\r\n        return () => {\r\n            socket.off('sensorDataUpdate');\r\n            socket.disconnect();\r\n        };\r\n    }, []); \r\n\r\n    // HÀM MỚI: Xử lý điều khiển thiết bị bằng API REST\r\n    const handleDeviceControl = async (device, status) => {\r\n        const newStatus = status; // 'on' hoặc 'off'\r\n        const oldStatus = status === 'on' ? 'off' : 'on';\r\n        \r\n        // 1. Cập nhật giao diện ngay lập tức (UI Optimistic Update)\r\n        setDeviceStatus(prev => ({ ...prev, [device]: newStatus }));\r\n\r\n        try {\r\n            // 2. Gửi lệnh tới Backend qua API REST\r\n            await controlDeviceAPI(device, newStatus);\r\n            console.log(`Lệnh ${newStatus} cho ${device} đã gửi thành công qua REST.`);\r\n            \r\n        } catch (error) {\r\n            console.error(`Gửi lệnh điều khiển thất bại cho ${device}:`, error);\r\n            // 3. Nếu lỗi, hoàn tác lại trạng thái (Rollback)\r\n            setDeviceStatus(prev => ({ ...prev, [device]: oldStatus }));\r\n            alert(`Lỗi: Không thể gửi lệnh điều khiển ${device}. Vui lòng kiểm tra Server.`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        // ... (Phần return JSX giữ nguyên)\r\n        <div className=\"dashboard-page\">\r\n            <h2>Dashboard Home</h2>\r\n            \r\n            <div className=\"sensor-summary-cards\">\r\n                <SensorCard title=\"Nhiệt độ\" value={latestData.temperature} unit=\"°C\" icon=\"🌡️\" theme=\"red\" />\r\n                <SensorCard title=\"Độ ẩm\" value={latestData.humidity} unit=\"%\" icon=\"💧\" theme=\"blue\" />\r\n                <SensorCard title=\"Ánh sáng\" value={latestData.light} unit=\"Lux\" icon=\"💡\" theme=\"yellow\" />\r\n            </div>\r\n            \r\n            <div className=\"chart-area card\">\r\n                <SensorChart sensorData={chartData} /> \r\n            </div>\r\n\r\n            <div className=\"device-control-area\">\r\n                <DeviceCard device=\"light\" label=\"Đèn Chiếu Sáng\" status={deviceStatus.light} onToggle={handleDeviceControl} />\r\n                <DeviceCard device=\"fan\" label=\"Quạt Thông Gió\" status={deviceStatus.fan} onToggle={handleDeviceControl} />\r\n                <DeviceCard device=\"ac\" label=\"Điều Hòa\" status={deviceStatus.ac} onToggle={handleDeviceControl} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
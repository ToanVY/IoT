{"ast":null,"code":"var _jsxFileName = \"C:\\\\CodeVSCode\\\\IOTProject\\\\IoT\\\\frontend\\\\src\\\\components\\\\SensorChart.jsx\",\n  _s = $RefreshSig$();\n// src/components/SensorChart.jsx\n\nimport React, { useMemo } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Đăng ký các thành phần cần thiết\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst SensorChart = ({\n  sensorData = []\n}) => {\n  _s();\n  // Sử dụng useMemo để tối ưu hiệu suất, chỉ tính toán lại khi sensorData thay đổi\n  const chartData = useMemo(() => {\n    const dataArray = Array.isArray(sensorData) ? sensorData : [];\n\n    // 1. Chuẩn bị Labels (Thời gian)\n    const labels = dataArray.map(item => {\n      const date = new Date(item.created_at); // Giả định trường thời gian là 'created_at'\n      // Format thời gian thành HH:MM:SS\n      return date.toLocaleTimeString('vi-VN', {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n    });\n\n    // 2. Chuẩn bị 3 Datasets riêng biệt\n    return {\n      labels: labels,\n      datasets: [{\n        label: 'Nhiệt độ (°C)',\n        data: dataArray.map(item => item.temperature),\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n        yAxisID: 'yTemp',\n        // Trục Y cho Nhiệt độ\n        tension: 0.3 // Độ cong của đường\n      }, {\n        label: 'Độ ẩm (%)',\n        data: dataArray.map(item => item.humidity),\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n        yAxisID: 'yHumidity',\n        // Trục Y cho Độ ẩm\n        tension: 0.3\n      }, {\n        label: 'Ánh sáng (Lux)',\n        data: dataArray.map(item => item.light),\n        borderColor: 'rgb(255, 206, 86)',\n        backgroundColor: 'rgba(255, 206, 86, 0.5)',\n        yAxisID: 'yLight',\n        // Trục Y cho Ánh sáng (có thể ẩn)\n        tension: 0.3\n      }]\n    };\n  }, [sensorData]); // Tái tính toán khi sensorData thay đổi\n\n  // Cấu hình Biểu đồ (Options)\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: 'Biểu đồ Cảm biến Thời gian thực'\n      },\n      legend: {\n        position: 'top'\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Thời gian'\n        }\n      },\n      // Trục Y 1: Nhiệt độ (bên trái)\n      yTemp: {\n        type: 'linear',\n        display: true,\n        position: 'left',\n        title: {\n          display: true,\n          text: 'Nhiệt độ (°C)'\n        }\n      },\n      // Trục Y 2: Độ ẩm (bên phải)\n      yHumidity: {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        grid: {\n          drawOnChartArea: false // Giúp biểu đồ đỡ rối mắt\n        },\n        title: {\n          display: true,\n          text: 'Độ ẩm (%)'\n        },\n        min: 0,\n        max: 100 // Độ ẩm thường từ 0-100%\n      },\n      // Trục Y 3: Ánh sáng (thường không hiển thị trục để tránh rối)\n      yLight: {\n        type: 'linear',\n        display: false,\n        position: 'right',\n        grid: {\n          drawOnChartArea: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s(SensorChart, \"i4eYYg6GOj65klTCDK4mhi4wfgw=\");\n_c = SensorChart;\nexport default SensorChart;\nvar _c;\n$RefreshReg$(_c, \"SensorChart\");","map":{"version":3,"names":["React","useMemo","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","SensorChart","sensorData","_s","chartData","dataArray","Array","isArray","labels","map","item","date","Date","created_at","toLocaleTimeString","hour","minute","second","datasets","label","data","temperature","borderColor","backgroundColor","yAxisID","tension","humidity","light","options","responsive","maintainAspectRatio","interaction","mode","intersect","plugins","title","display","text","legend","position","scales","x","yTemp","type","yHumidity","grid","drawOnChartArea","min","max","yLight","style","height","width","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/CodeVSCode/IOTProject/IoT/frontend/src/components/SensorChart.jsx"],"sourcesContent":["// src/components/SensorChart.jsx\r\n\r\nimport React, { useMemo } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n// Đăng ký các thành phần cần thiết\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nconst SensorChart = ({ sensorData = [] }) => {\r\n    \r\n    // Sử dụng useMemo để tối ưu hiệu suất, chỉ tính toán lại khi sensorData thay đổi\r\n    const chartData = useMemo(() => {\r\n        const dataArray = Array.isArray(sensorData) ? sensorData : [];\r\n\r\n        // 1. Chuẩn bị Labels (Thời gian)\r\n        const labels = dataArray.map(item => {\r\n            const date = new Date(item.created_at); // Giả định trường thời gian là 'created_at'\r\n            // Format thời gian thành HH:MM:SS\r\n            return date.toLocaleTimeString('vi-VN', { hour: '2-digit', minute: '2-digit', second: '2-digit' });\r\n        });\r\n\r\n        // 2. Chuẩn bị 3 Datasets riêng biệt\r\n        return {\r\n            labels: labels,\r\n            datasets: [\r\n                {\r\n                    label: 'Nhiệt độ (°C)',\r\n                    data: dataArray.map(item => item.temperature), \r\n                    borderColor: 'rgb(255, 99, 132)', \r\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n                    yAxisID: 'yTemp', // Trục Y cho Nhiệt độ\r\n                    tension: 0.3, // Độ cong của đường\r\n                },\r\n                {\r\n                    label: 'Độ ẩm (%)',\r\n                    data: dataArray.map(item => item.humidity), \r\n                    borderColor: 'rgb(53, 162, 235)', \r\n                    backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n                    yAxisID: 'yHumidity', // Trục Y cho Độ ẩm\r\n                    tension: 0.3,\r\n                },\r\n                {\r\n                    label: 'Ánh sáng (Lux)',\r\n                    data: dataArray.map(item => item.light), \r\n                    borderColor: 'rgb(255, 206, 86)', \r\n                    backgroundColor: 'rgba(255, 206, 86, 0.5)',\r\n                    yAxisID: 'yLight', // Trục Y cho Ánh sáng (có thể ẩn)\r\n                    tension: 0.3,\r\n                },\r\n            ],\r\n        };\r\n    }, [sensorData]); // Tái tính toán khi sensorData thay đổi\r\n\r\n    // Cấu hình Biểu đồ (Options)\r\n    const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false, \r\n        interaction: {\r\n            mode: 'index',\r\n            intersect: false,\r\n        },\r\n        plugins: {\r\n            title: {\r\n                display: true,\r\n                text: 'Biểu đồ Cảm biến Thời gian thực',\r\n            },\r\n            legend: {\r\n                position: 'top',\r\n            }\r\n        },\r\n        scales: {\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Thời gian',\r\n                },\r\n            },\r\n            // Trục Y 1: Nhiệt độ (bên trái)\r\n            yTemp: { \r\n                type: 'linear',\r\n                display: true,\r\n                position: 'left',\r\n                title: {\r\n                    display: true,\r\n                    text: 'Nhiệt độ (°C)',\r\n                },\r\n            },\r\n            // Trục Y 2: Độ ẩm (bên phải)\r\n            yHumidity: { \r\n                type: 'linear',\r\n                display: true,\r\n                position: 'right', \r\n                grid: {\r\n                    drawOnChartArea: false, // Giúp biểu đồ đỡ rối mắt\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'Độ ẩm (%)',\r\n                },\r\n                min: 0,\r\n                max: 100, // Độ ẩm thường từ 0-100%\r\n            },\r\n            // Trục Y 3: Ánh sáng (thường không hiển thị trục để tránh rối)\r\n            yLight: {\r\n                type: 'linear',\r\n                display: false, \r\n                position: 'right', \r\n                grid: {\r\n                    drawOnChartArea: false,\r\n                },\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div style={{ height: '400px', width: '100%' }}> \r\n            <Line options={options} data={chartData} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SensorChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
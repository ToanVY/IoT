{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\IoT\\\\IoT-WebApp\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { getSensorData } from '../api';\nimport SensorChart from '../components/SensorChart';\nimport SensorCard from '../components/SensorCard';\nimport DeviceCard from '../components/DeviceCard';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [latestData, setLatestData] = useState({\n    temperature: '--',\n    humidity: '--',\n    light: '--'\n  });\n\n  // D·ªØ li·ªáu th√¥ cho bi·ªÉu ƒë·ªì (m·∫£ng c√°c ƒë·ªëi t∆∞·ª£ng)\n  const [chartData, setChartData] = useState([]);\n\n  // Tr·∫°ng th√°i c·ªßa ba thi·∫øt b·ªã\n  const [deviceStatus, setDeviceStatus] = useState({\n    light: 'off',\n    fan: 'off',\n    ac: 'off'\n  });\n\n  // Kh·ªüi t·∫°o Socket.IO (S·ª≠ d·ª•ng IP v√† Port c·ªßa Backend Server)\n  const socket = io('http://localhost:5000');\n  useEffect(() => {\n    // H√†m t·∫£i d·ªØ li·ªáu l·ªãch s·ª≠ (30 ƒëi·ªÉm g·∫ßn nh·∫•t)\n    const fetchInitialData = async () => {\n      try {\n        const data = await getSensorData(30);\n        setChartData(data.reverse());\n        if (data.length > 0) {\n          setLatestData(data[data.length - 1]);\n        }\n      } catch (error) {\n        console.error(\"L·ªói t·∫£i d·ªØ li·ªáu ban ƒë·∫ßu:\", error);\n      }\n    };\n    fetchInitialData();\n\n    // L·∫Øng nghe Socket.IO cho d·ªØ li·ªáu th·ªùi gian th·ª±c\n    socket.on('sensorDataUpdate', data => {\n      setLatestData(data);\n\n      // C·∫≠p nh·∫≠t bi·ªÉu ƒë·ªì\n      setChartData(prevChartData => {\n        const newData = [...prevChartData, data];\n        return newData.slice(-30); // Gi·ªØ l·∫°i 30 ƒëi·ªÉm cu·ªëi c√πng\n      });\n    });\n\n    // Cleanup\n    return () => {\n      socket.off('sensorDataUpdate');\n      socket.disconnect();\n    };\n  }, []);\n\n  // X·ª≠ l√Ω ƒëi·ªÅu khi·ªÉn thi·∫øt b·ªã\n  const handleDeviceControl = (device, status) => {\n    // 1. C·∫≠p nh·∫≠t giao di·ªán ngay l·∫≠p t·ª©c\n    setDeviceStatus(prev => ({\n      ...prev,\n      [device]: status\n    }));\n\n    // 2. G·ª≠i l·ªánh t·ªõi Backend qua Socket.IO\n    console.log(`G·ª≠i l·ªánh ƒëi·ªÅu khi·ªÉn: ${device} - ${status}`);\n    socket.emit('controlDevice', {\n      device,\n      status\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-summary-cards\",\n      children: [/*#__PURE__*/_jsxDEV(SensorCard, {\n        title: \"Nhi\\u1EC7t \\u0111\\u1ED9\",\n        value: latestData.temperature,\n        unit: \"\\xB0C\",\n        icon: \"\\uD83C\\uDF21\\uFE0F\",\n        theme: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SensorCard, {\n        title: \"\\u0110\\u1ED9 \\u1EA9m\",\n        value: latestData.humidity,\n        unit: \"%\",\n        icon: \"\\uD83D\\uDCA7\",\n        theme: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SensorCard, {\n        title: \"\\xC1nh s\\xE1ng\",\n        value: latestData.light,\n        unit: \"Lux\",\n        icon: \"\\uD83D\\uDCA1\",\n        theme: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-area card\",\n      children: /*#__PURE__*/_jsxDEV(SensorChart, {\n        sensorData: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"device-control-area\",\n      children: [/*#__PURE__*/_jsxDEV(DeviceCard, {\n        device: \"light\",\n        label: \"\\u0110\\xE8n Chi\\u1EBFu S\\xE1ng\",\n        status: deviceStatus.light,\n        onToggle: handleDeviceControl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeviceCard, {\n        device: \"fan\",\n        label: \"Qu\\u1EA1t Th\\xF4ng Gi\\xF3\",\n        status: deviceStatus.fan,\n        onToggle: handleDeviceControl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeviceCard, {\n        device: \"ac\",\n        label: \"\\u0110i\\u1EC1u H\\xF2a\",\n        status: deviceStatus.ac,\n        onToggle: handleDeviceControl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"kqhaHaZwusA09533Bx/b1qTTfz0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","io","getSensorData","SensorChart","SensorCard","DeviceCard","jsxDEV","_jsxDEV","Dashboard","_s","latestData","setLatestData","temperature","humidity","light","chartData","setChartData","deviceStatus","setDeviceStatus","fan","ac","socket","fetchInitialData","data","reverse","length","error","console","on","prevChartData","newData","slice","off","disconnect","handleDeviceControl","device","status","prev","log","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","value","unit","icon","theme","sensorData","label","onToggle","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/IoT/IoT-WebApp/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["// src/pages/Dashboard.jsx\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { getSensorData } from '../api'; \r\nimport SensorChart from '../components/SensorChart';\r\nimport SensorCard from '../components/SensorCard';\r\nimport DeviceCard from '../components/DeviceCard';\r\nimport './Dashboard.css'; \r\n\r\nconst Dashboard = () => {\r\n    const [latestData, setLatestData] = useState({ \r\n        temperature: '--', \r\n        humidity: '--', \r\n        light: '--' \r\n    });\r\n    \r\n    // D·ªØ li·ªáu th√¥ cho bi·ªÉu ƒë·ªì (m·∫£ng c√°c ƒë·ªëi t∆∞·ª£ng)\r\n    const [chartData, setChartData] = useState([]); \r\n    \r\n    // Tr·∫°ng th√°i c·ªßa ba thi·∫øt b·ªã\r\n    const [deviceStatus, setDeviceStatus] = useState({\r\n        light: 'off',\r\n        fan: 'off',\r\n        ac: 'off'\r\n    });\r\n\r\n    // Kh·ªüi t·∫°o Socket.IO (S·ª≠ d·ª•ng IP v√† Port c·ªßa Backend Server)\r\n    const socket = io('http://localhost:5000'); \r\n\r\n    useEffect(() => {\r\n        // H√†m t·∫£i d·ªØ li·ªáu l·ªãch s·ª≠ (30 ƒëi·ªÉm g·∫ßn nh·∫•t)\r\n        const fetchInitialData = async () => {\r\n            try {\r\n                const data = await getSensorData(30); \r\n                setChartData(data.reverse()); \r\n                if (data.length > 0) {\r\n                    setLatestData(data[data.length - 1]);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"L·ªói t·∫£i d·ªØ li·ªáu ban ƒë·∫ßu:\", error);\r\n            }\r\n        };\r\n\r\n        fetchInitialData();\r\n\r\n        // L·∫Øng nghe Socket.IO cho d·ªØ li·ªáu th·ªùi gian th·ª±c\r\n        socket.on('sensorDataUpdate', (data) => {\r\n            setLatestData(data);\r\n            \r\n            // C·∫≠p nh·∫≠t bi·ªÉu ƒë·ªì\r\n            setChartData(prevChartData => {\r\n                const newData = [...prevChartData, data];\r\n                return newData.slice(-30); // Gi·ªØ l·∫°i 30 ƒëi·ªÉm cu·ªëi c√πng\r\n            });\r\n        });\r\n\r\n        // Cleanup\r\n        return () => {\r\n            socket.off('sensorDataUpdate');\r\n            socket.disconnect();\r\n        };\r\n    }, []); \r\n\r\n    // X·ª≠ l√Ω ƒëi·ªÅu khi·ªÉn thi·∫øt b·ªã\r\n    const handleDeviceControl = (device, status) => {\r\n        // 1. C·∫≠p nh·∫≠t giao di·ªán ngay l·∫≠p t·ª©c\r\n        setDeviceStatus(prev => ({ ...prev, [device]: status }));\r\n        \r\n        // 2. G·ª≠i l·ªánh t·ªõi Backend qua Socket.IO\r\n        console.log(`G·ª≠i l·ªánh ƒëi·ªÅu khi·ªÉn: ${device} - ${status}`);\r\n        socket.emit('controlDevice', { device, status });\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-page\">\r\n            <h2>Dashboard Home</h2>\r\n            \r\n            {/* KHU V·ª∞C 1: TH·∫∫ HI·ªÇN TH·ªä D·ªÆ LI·ªÜU C·∫¢M BI·∫æN M·ªöI NH·∫§T */}\r\n            <div className=\"sensor-summary-cards\">\r\n                <SensorCard \r\n                    title=\"Nhi·ªát ƒë·ªô\" \r\n                    value={latestData.temperature} \r\n                    unit=\"¬∞C\" \r\n                    icon=\"üå°Ô∏è\" \r\n                    theme=\"red\" \r\n                />\r\n                <SensorCard \r\n                    title=\"ƒê·ªô ·∫©m\" \r\n                    value={latestData.humidity} \r\n                    unit=\"%\" \r\n                    icon=\"üíß\" \r\n                    theme=\"blue\"\r\n                />\r\n                <SensorCard \r\n                    title=\"√Ånh s√°ng\" \r\n                    value={latestData.light} \r\n                    unit=\"Lux\" \r\n                    icon=\"üí°\" \r\n                    theme=\"yellow\" \r\n                />\r\n            </div>\r\n            \r\n            {/* KHU V·ª∞C 2: BI·ªÇU ƒê·ªí TH·ªúI GIAN TH·ª∞C (3 ƒê∆Ø·ªúNG) */}\r\n            <div className=\"chart-area card\">\r\n                <SensorChart sensorData={chartData} /> \r\n            </div>\r\n\r\n            {/* KHU V·ª∞C 3: ƒêI·ªÄU KHI·ªÇN THI·∫æT B·ªä */}\r\n            <div className=\"device-control-area\">\r\n                <DeviceCard\r\n                    device=\"light\"\r\n                    label=\"ƒê√®n Chi·∫øu S√°ng\"\r\n                    status={deviceStatus.light}\r\n                    onToggle={handleDeviceControl}\r\n                />\r\n                <DeviceCard\r\n                    device=\"fan\"\r\n                    label=\"Qu·∫°t Th√¥ng Gi√≥\"\r\n                    status={deviceStatus.fan}\r\n                    onToggle={handleDeviceControl}\r\n                />\r\n                <DeviceCard\r\n                    device=\"ac\"\r\n                    label=\"ƒêi·ªÅu H√≤a\"\r\n                    status={deviceStatus.ac}\r\n                    onToggle={handleDeviceControl}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\IoT\\\\IoT-WebApp\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/Dashboard.jsx\nimport React, { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { getSensorData, controlDeviceAPI } from '../api';\nimport SensorChart from '../components/SensorChart';\nimport SensorCard from '../components/SensorCard';\nimport DeviceCard from '../components/DeviceCard';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [latestData, setLatestData] = useState({\n    temperature: '--',\n    humidity: '--',\n    light: '--'\n  });\n  const [chartData, setChartData] = useState([]);\n  const [deviceStatus, setDeviceStatus] = useState({\n    light: 'off',\n    fan: 'off',\n    ac: 'off'\n  });\n  const [pendingDevice, setPendingDevice] = useState(null);\n  const timeoutRef = useRef(null);\n  const socketRef = useRef(null);\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const data = await getSensorData(30);\n        setChartData(data.reverse());\n        if (data.length > 0) {\n          setLatestData(data[data.length - 1]);\n        }\n      } catch (error) {\n        console.error(\"L·ªói t·∫£i d·ªØ li·ªáu ban ƒë·∫ßu:\", error);\n      }\n    };\n    fetchInitialData();\n\n    // ‚úÖ t·∫°o socket 1 l·∫ßn\n    socketRef.current = io('http://localhost:5000');\n    socketRef.current.on('sensorDataUpdate', data => {\n      setLatestData(data);\n      setChartData(prev => [...prev.slice(-29), data]);\n    });\n    socketRef.current.on('deviceStates', states => {\n      console.log(\"üîÑ Nh·∫≠n tr·∫°ng th√°i thi·∫øt b·ªã:\", states);\n      setDeviceStatus(states);\n      setPendingDevice(null);\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = null;\n      }\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n  const handleDeviceControl = async (device, status) => {\n    setPendingDevice(device);\n    try {\n      await controlDeviceAPI(device, status);\n      console.log(`‚úÖ G·ª≠i l·ªánh ${status} cho ${device}, ch·ªù ph·∫£n h·ªìi...`);\n\n      // Timeout 5s\n      if (timeoutRef.current) clearTimeout(timeoutRef.current);\n      timeoutRef.current = setTimeout(() => {\n        alert(`‚ö†Ô∏è Thi·∫øt b·ªã \"${device}\" kh√¥ng ph·∫£n h·ªìi.`);\n        setPendingDevice(null);\n      }, 5000);\n    } catch (error) {\n      console.error(`‚ùå L·ªói g·ª≠i l·ªánh cho ${device}:`, error);\n      alert(`Kh√¥ng th·ªÉ ƒëi·ªÅu khi·ªÉn ${device}.`);\n      setPendingDevice(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-summary-cards\",\n      children: [/*#__PURE__*/_jsxDEV(SensorCard, {\n        title: \"Nhi\\u1EC7t \\u0111\\u1ED9\",\n        value: latestData.temperature,\n        unit: \"\\xB0C\",\n        icon: \"\\uD83C\\uDF21\\uFE0F\",\n        theme: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SensorCard, {\n        title: \"\\u0110\\u1ED9 \\u1EA9m\",\n        value: latestData.humidity,\n        unit: \"%\",\n        icon: \"\\uD83D\\uDCA7\",\n        theme: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SensorCard, {\n        title: \"\\xC1nh s\\xE1ng\",\n        value: latestData.light,\n        unit: \"Lux\",\n        icon: \"\\uD83D\\uDCA1\",\n        theme: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-area card\",\n      children: /*#__PURE__*/_jsxDEV(SensorChart, {\n        sensorData: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"device-control-area\",\n      children: [/*#__PURE__*/_jsxDEV(DeviceCard, {\n        device: \"light\",\n        label: \"\\u0110\\xE8n Chi\\u1EBFu S\\xE1ng\",\n        status: deviceStatus.light,\n        onToggle: handleDeviceControl,\n        loading: pendingDevice === 'light'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeviceCard, {\n        device: \"fan\",\n        label: \"Qu\\u1EA1t Th\\xF4ng Gi\\xF3\",\n        status: deviceStatus.fan,\n        onToggle: handleDeviceControl,\n        loading: pendingDevice === 'fan'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeviceCard, {\n        device: \"ac\",\n        label: \"\\u0110i\\u1EC1u H\\xF2a\",\n        status: deviceStatus.ac,\n        onToggle: handleDeviceControl,\n        loading: pendingDevice === 'ac'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"+J8GONiiT1WvpSy/SCtMlQHNwBw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","getSensorData","controlDeviceAPI","SensorChart","SensorCard","DeviceCard","jsxDEV","_jsxDEV","Dashboard","_s","latestData","setLatestData","temperature","humidity","light","chartData","setChartData","deviceStatus","setDeviceStatus","fan","ac","pendingDevice","setPendingDevice","timeoutRef","socketRef","fetchInitialData","data","reverse","length","error","console","current","on","prev","slice","states","log","clearTimeout","disconnect","handleDeviceControl","device","status","setTimeout","alert","className","children","title","value","unit","icon","theme","fileName","_jsxFileName","lineNumber","columnNumber","sensorData","label","onToggle","loading","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/IoT/IoT-WebApp/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["// frontend/src/pages/Dashboard.jsx\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { getSensorData, controlDeviceAPI } from '../api';\r\nimport SensorChart from '../components/SensorChart';\r\nimport SensorCard from '../components/SensorCard';\r\nimport DeviceCard from '../components/DeviceCard';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [latestData, setLatestData] = useState({\r\n    temperature: '--',\r\n    humidity: '--',\r\n    light: '--'\r\n  });\r\n  const [chartData, setChartData] = useState([]);\r\n  const [deviceStatus, setDeviceStatus] = useState({\r\n    light: 'off',\r\n    fan: 'off',\r\n    ac: 'off'\r\n  });\r\n  const [pendingDevice, setPendingDevice] = useState(null);\r\n\r\n  const timeoutRef = useRef(null);\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const data = await getSensorData(30);\r\n        setChartData(data.reverse());\r\n        if (data.length > 0) {\r\n          setLatestData(data[data.length - 1]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"L·ªói t·∫£i d·ªØ li·ªáu ban ƒë·∫ßu:\", error);\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n\r\n    // ‚úÖ t·∫°o socket 1 l·∫ßn\r\n    socketRef.current = io('http://localhost:5000');\r\n\r\n    socketRef.current.on('sensorDataUpdate', (data) => {\r\n      setLatestData(data);\r\n      setChartData(prev => [...prev.slice(-29), data]);\r\n    });\r\n\r\n    socketRef.current.on('deviceStates', (states) => {\r\n      console.log(\"üîÑ Nh·∫≠n tr·∫°ng th√°i thi·∫øt b·ªã:\", states);\r\n      setDeviceStatus(states);\r\n      setPendingDevice(null);\r\n\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n        timeoutRef.current = null;\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleDeviceControl = async (device, status) => {\r\n    setPendingDevice(device);\r\n\r\n    try {\r\n      await controlDeviceAPI(device, status);\r\n      console.log(`‚úÖ G·ª≠i l·ªánh ${status} cho ${device}, ch·ªù ph·∫£n h·ªìi...`);\r\n\r\n      // Timeout 5s\r\n      if (timeoutRef.current) clearTimeout(timeoutRef.current);\r\n      timeoutRef.current = setTimeout(() => {\r\n        alert(`‚ö†Ô∏è Thi·∫øt b·ªã \"${device}\" kh√¥ng ph·∫£n h·ªìi.`);\r\n        setPendingDevice(null);\r\n      }, 5000);\r\n\r\n    } catch (error) {\r\n      console.error(`‚ùå L·ªói g·ª≠i l·ªánh cho ${device}:`, error);\r\n      alert(`Kh√¥ng th·ªÉ ƒëi·ªÅu khi·ªÉn ${device}.`);\r\n      setPendingDevice(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-page\">\r\n      {/* Sensor Cards */}\r\n      <div className=\"sensor-summary-cards\">\r\n        <SensorCard title=\"Nhi·ªát ƒë·ªô\" value={latestData.temperature} unit=\"¬∞C\" icon=\"üå°Ô∏è\" theme=\"red\" />\r\n        <SensorCard title=\"ƒê·ªô ·∫©m\" value={latestData.humidity} unit=\"%\" icon=\"üíß\" theme=\"blue\" />\r\n        <SensorCard title=\"√Ånh s√°ng\" value={latestData.light} unit=\"Lux\" icon=\"üí°\" theme=\"yellow\" />\r\n      </div>\r\n\r\n      {/* Chart */}\r\n      <div className=\"chart-area card\">\r\n        <SensorChart sensorData={chartData} />\r\n      </div>\r\n\r\n      {/* Device Control */}\r\n      <div className=\"device-control-area\">\r\n        <DeviceCard\r\n          device=\"light\"\r\n          label=\"ƒê√®n Chi·∫øu S√°ng\"\r\n          status={deviceStatus.light}\r\n          onToggle={handleDeviceControl}\r\n          loading={pendingDevice === 'light'}\r\n        />\r\n        <DeviceCard\r\n          device=\"fan\"\r\n          label=\"Qu·∫°t Th√¥ng Gi√≥\"\r\n          status={deviceStatus.fan}\r\n          onToggle={handleDeviceControl}\r\n          loading={pendingDevice === 'fan'}\r\n        />\r\n        <DeviceCard\r\n          device=\"ac\"\r\n          label=\"ƒêi·ªÅu H√≤a\"\r\n          status={deviceStatus.ac}\r\n          onToggle={handleDeviceControl}\r\n          loading={pendingDevice === 'ac'}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
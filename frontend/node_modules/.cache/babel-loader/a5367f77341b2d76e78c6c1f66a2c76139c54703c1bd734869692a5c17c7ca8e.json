{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\IoT\\\\IoT-WebApp\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport SensorChart from \"../components/SensorChart\"; // đổi đường dẫn đúng\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3000\"); // chỉnh nếu backend khác port\n\nconst Dashboard = () => {\n  _s();\n  const [sensorData, setSensorData] = useState([]);\n  const [devices, setDevices] = useState([{\n    id: 1,\n    name: \"Đèn phòng\",\n    status: false\n  }, {\n    id: 2,\n    name: \"Quạt\",\n    status: false\n  }, {\n    id: 3,\n    name: \"Máy bơm\",\n    status: false\n  }]);\n\n  // Nhận dữ liệu cảm biến từ server\n  useEffect(() => {\n    socket.on(\"sensorDataUpdate\", data => {\n      setSensorData(prev => [...prev.slice(-19), data]); // giữ 20 bản ghi mới nhất\n    });\n    return () => {\n      socket.off(\"sensorDataUpdate\");\n    };\n  }, []);\n\n  // Hàm bật/tắt thiết bị (giữ nguyên logic cũ của bạn)\n  const toggleDevice = id => {\n    setDevices(prev => prev.map(device => device.id === id ? {\n      ...device,\n      status: !device.status\n    } : device));\n    socket.emit(\"deviceToggle\", {\n      id,\n      time: new Date()\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-area\",\n      children: /*#__PURE__*/_jsxDEV(SensorChart, {\n        sensorData: sensorData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"device-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thi\\u1EBFt b\\u1ECB \\u0111i\\u1EC1u khi\\u1EC3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `device-card ${device.status ? \"on\" : \"off\"}`,\n        onClick: () => toggleDevice(device.id),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: device.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: device.status ? \"Bật\" : \"Tắt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, device.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"+gV+1R3uRO5D8Y0VC6DbTqy1ZTQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","io","SensorChart","jsxDEV","_jsxDEV","socket","Dashboard","_s","sensorData","setSensorData","devices","setDevices","id","name","status","on","data","prev","slice","off","toggleDevice","map","device","emit","time","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/IoT/IoT-WebApp/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport SensorChart from \"../components/SensorChart\"; // đổi đường dẫn đúng\r\nimport \"./Dashboard.css\";\r\n\r\nconst socket = io(\"http://localhost:3000\"); // chỉnh nếu backend khác port\r\n\r\nconst Dashboard = () => {\r\n  const [sensorData, setSensorData] = useState([]);\r\n  const [devices, setDevices] = useState([\r\n    { id: 1, name: \"Đèn phòng\", status: false },\r\n    { id: 2, name: \"Quạt\", status: false },\r\n    { id: 3, name: \"Máy bơm\", status: false },\r\n  ]);\r\n\r\n  // Nhận dữ liệu cảm biến từ server\r\n  useEffect(() => {\r\n    socket.on(\"sensorDataUpdate\", (data) => {\r\n      setSensorData((prev) => [...prev.slice(-19), data]); // giữ 20 bản ghi mới nhất\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"sensorDataUpdate\");\r\n    };\r\n  }, []);\r\n\r\n  // Hàm bật/tắt thiết bị (giữ nguyên logic cũ của bạn)\r\n  const toggleDevice = (id) => {\r\n    setDevices((prev) =>\r\n      prev.map((device) =>\r\n        device.id === id ? { ...device, status: !device.status } : device\r\n      )\r\n    );\r\n    socket.emit(\"deviceToggle\", { id, time: new Date() });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/* Biểu đồ bên trái */}\r\n      <div className=\"chart-area\">\r\n        <SensorChart sensorData={sensorData} />\r\n      </div>\r\n\r\n      {/* Điều khiển thiết bị bên phải */}\r\n      <div className=\"device-area\">\r\n        <h2>Thiết bị điều khiển</h2>\r\n        {devices.map((device) => (\r\n          <div\r\n            key={device.id}\r\n            className={`device-card ${device.status ? \"on\" : \"off\"}`}\r\n            onClick={() => toggleDevice(device.id)}\r\n          >\r\n            <span>{device.name}</span>\r\n            <span>{device.status ? \"Bật\" : \"Tắt\"}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}